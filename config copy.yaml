hyperopt:
  space:
    model_type:
      type: choice
      options: ['lgbm', 'xgboost', 'random_forest', 'sgd']
    embedding_type:
      type: choice
      options: ['bert', 'word2vec']

    lgbm_params:
      learning_rate:
        type: loguniform
        low: -3
        high: 0
      n_estimators:
        type: choice
        options: [50, 200]
      max_depth:
        type: choice
        options: [3, 10]
      subsample:
        type: uniform
        low: 0.5
        high: 1.0
      colsample_bytree:
        type: uniform
        low: 0.5
        high: 1.0

    xgboost_params:
      learning_rate:
        type: loguniform
        low: -3
        high: 0
      n_estimators:
        type: choice
        options: [50, 200]
      max_depth:
        type: choice
        options: [3, 10]
      subsample:
        type: uniform
        low: 0.5
        high: 1.0
      colsample_bytree:
        type: uniform
        low: 0.5
        high: 1.0

    random_forest_params:
      n_estimators:
        type: choice
        options: [50, 200]
      max_depth:
        type: choice
        options: [3, 10]
      criterion:
        type: choice
        options: ['gini', 'entropy']

    sgd_params:
      loss:
        type: choice
        options: ['log', 'hinge']
      penalty:
        type: choice
        options: ['l2', 'l1']
      alpha:
        type: loguniform
        low: -5
        high: -1
      learning_rate:
        type: choice
        options: ['optimal', 'invscaling', 'constant']

  fixed_params:
    lgbm:
      objective: "binary"
      metric: "binary_logloss"
    xgboost:
      objective: "binary:logistic"
    random_forest:
      criterion: "gini"
    sgd:
      loss: "log"
      penalty: "l2"
      alpha: 0.0001
